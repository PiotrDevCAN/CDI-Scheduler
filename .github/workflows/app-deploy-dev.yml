---
name: ci-build-and-deploy-development
on:
  push:
    branches:
      - cirrus
jobs:
  Build:
    runs-on:
      - aro-dev-westus3
    environment: development
    steps:
      - name: Get JFROG Credentials
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.kyndryl.net
          method: token
          namespace: kyndryl/KYNDRYL_PRACTICES/
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: false
          secrets: |
            kps-gd-app-cdisched/data/dev/w3us/jfrog JFROG_USER | JFROG_USER ; 
            kps-gd-app-cdisched/data/dev/w3us/jfrog  JFROG_TOKEN | JFROG_TOKEN
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Jfrog
        uses: docker/login-action@v2
        with:
          registry: kyndryl.jfrog.io
          username: ${{ steps.import-secrets.outputs.JFROG_USER }}
          password: ${{ steps.import-secrets.outputs.JFROG_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Print SHORT_NAME
        run: echo  ${{ vars.SHORT_NAME }}
      - name: Print SHORT_NAME 2
        run: echo  kyndryl.jfrog.io/uki-business-intelligence-test-docker-local/cdisched:${{ vars.SHORT_NAME }}_${{ github.run_number }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: | 
            kyndryl.jfrog.io/uki-business-intelligence-test-docker-local/cdisched:${{ vars.SHORT_NAME }}_${{ github.run_number }}
  Deploy:
    name: Deploy
    needs:
      - Build
    runs-on:
      - aro-dev-westus3
    environment: development
    steps:
      - name: Checkout Sourcecode
        uses: actions/checkout@v3
      - name: Import JFROG & ARO Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.kyndryl.net
          method: token
          namespace: kyndryl/KYNDRYL_PRACTICES/
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: false
          secrets: |
            kps-gd-app-cdisched/data/dev/w3us/jfrog JFROG_USER | JFROG_USER ;
            kps-gd-app-cdisched/data/dev/w3us/jfrog  JFROG_TOKEN | JFROG_TOKEN ;
            kps-gd-app-cdisched/data/dev/w3us/openshift-sa  SERVER_URL | SERVER_URL ;
            kps-gd-app-cdisched/data/dev/w3us/openshift-sa  SA_TOKEN | SA_TOKEN ;
            kps-gd-app-cdisched/data/dev/w3us/openshift-sa  NAMESPACE | NAMESPACE
      - name: Login to ARO Cluster
        id: set-aro-context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.import-secrets.outputs.SERVER_URL }}
          openshift_token: ${{ steps.import-secrets.outputs.SA_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
      - name: Set ImagePullSecrets
        id: image_secret
        uses: Azure/k8s-create-secret@v4.0
        with:
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
          secret-name: cdisched-app-docker-secrets
          container-registry-url: kyndryl.jfrog.io
          container-registry-username: ${{ steps.import-secrets.outputs.JFROG_USER }}
          container-registry-password: ${{ steps.import-secrets.outputs.JFROG_TOKEN }}
      - name: Deploy application
        id: deploy-app
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ steps.import-secrets.outputs.NAMESPACE }}
          images: |
            kyndryl.jfrog.io/uki-business-intelligence-test-docker-local/cdisched:${{ vars.SHORT_NAME }}_${{ github.run_number }}
          # Path to the manifest files to be used for deployment. 
          manifests: |
            ./env-configmap.yml
            ./env-secrets.yml
            ./myapp-deployment.yml
            ./myapp-service.yml
            ./myapp-sn-route.yml
          # Multiline input where each line contains the name of a docker-registry secret 
          # that has already been setup within the cluster. 
          # Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
          imagepullsecrets: |
            cdisched-app-docker-secrets
            env-configmap
            env-secrets
